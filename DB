Third highest
select * from payment order by amount desc offset 2 limit 1;
select MAX(salary) from emp_table; gives highest salary
select MAX(salary) from emp_table where salary < (select MAX(salary) from emp_table); gives 2nd highest salary
but better approach is
select salary from emp_table order by salary desc offset 2 limit 1; gives third highest salary

equi join
https://www.dotnettricks.com/learn/sqlserver/difference-between-inner-join-and-equi-join-and-natural-join
https://www.educative.io/edpresso/what-is-an-equi-join-in-sql
SELECT *
FROM TableName1, TableName2
WHERE TableName1.ColumnName = TableName2.ColumnName;
-- OR
SELECT *
FROM TableName1
JOIN TableName2
ON TableName1.ColumnName = TableName2.ColumnName;

Non equi join uses, other than = symbol like >,<,>=,<=
-----------
/* to get 4th highest row based on column*/
select * from sales_by_film_category order by total_sales desc limit 1 offset 3;
Ref: https://sqlpad.io/sql-playground/
-------------

Diff joins in SQL -
inner join - join, inner join are same
left join
right join
full join - FULL OUTER JOIN and FULL JOIN are the same.
-------
If we drop a table, does it also drop related objects like constraints, indexes, columns, default, views and stored procedures?
SQL server drops all related objects, which exists inside a table like constraints, indexes, columns, defaults etc..
But dropping a table will not drop views and stored procedures as they exist outside the table
---------
indexing -
what are indexes and how to create an index in SQL?
indexes are database objects which help in retrieving records quickly and more efficiently.
column indexes can be created on both tables and views.
by declaring a column as an index within a table/view, the user can access those records quickly by executing the index.
Indexes with more than one column are called clustered indexes.

Syntax:
CREATE INDEX INDEX_NAME ON TABLE_NAME(COL1,COL2);

DROP INDEX INDEX_NAME on TABLE_NAME;

Indexes are known to improve the efficiency of SQL Select Queries with where clause

How do these indexes work?
in general, full table scan if there is no index.
An index is a data structure that stores the values for a certain specific column of a table and helps us avoid a full table scan
Database Indexing in reality, allows us to cut down the number of rows/records that need to be examined when a select query with a where clause is executed.

Few DS used in index are:
B-tree - commonly used DS for indexes as they are time-efficient for lookups, deletions and insertions.
All these operations can be done in logarithmic time. Data that is stored inside of a B-tree can be sorted.
Hash tables

Disadvantages of indexes -
additional space, so the larger the table, the bigger the index
every time we perform an add, delete, or update operation, the same operation will need to be performed on the index as well
---------
performance tuning
if there are 1lakh records, how will u fetch efficienyly
how do we know whether query is efficient or not


diff objects in DB like tables
use of procedures
use of trigger
use of aggregator
functions
grouping by
-----
https://sqlpad.io/sql-interview-questions/

------
Write a query to return the total movie rental revenue for each month.
SELECT extract(YEAR FROM payment_ts) as year , extract(MONTH FROM payment_ts) as mon, sum(amount) as rev
FROM payment
group by year,mon;

Aggregate functions in SQL:https://www.geeksforgeeks.org/aggregate-functions-in-sql/
1) Count()
2) Sum()
3) Avg()
4) Min()
5) Max()

/* Write a query to return the name of the store and its manager, that generated the most sales. */
SELECT store,manager
FROM sales_by_store
order by total_sales desc LIMIT 1;

/*Write a query to find the top 3 film categories that generated the most sales*/
col_name   | col_type
-------------+----------
 category    | text
 total_sales | numeric
 
SELECT category
FROM sales_by_film_category order by total_sales desc limit 3;



/*Write a query to return the titles of the 5 shortest movies by duration*/
SELECT title
FROM film order by length
LIMIT 5;
by default order by does asecnding order.


/* Write a SQL query to return this staff's first name and last name , where picture is NULL */
SELECT first_name, last_name
FROM staff
where picture is NULL;
