1. Why String is an immutable class
2. What is immutable class, how to create custom immutable class
3. What will happen if we clone immutable class
4. Talk about memory allocation for different wrapper classes
5. Abstraction,  encapsulation and its significance with real time examples
6. Class loaders in java
7. SOLID principles
8. What is generics
9. Generics
10. When u hv hashtable why u need to go to synchronized hashmap
11. Java 8 features
12. What is lambda expression
13. How do u create custom function interface
14. One problem from stream api
15. What is the function interface used in filter and map
16. Predicate,  supplier  , consumer and function
17. What is flat map

serialisation in java
hashcode collision


Arrays.asList()
List.of()

distinct ()

collect(Collecters.toList())

For custom classes, implement equals method for the variable which we want distinct.


limit(n) 
Gives first n  values


Collections.singletonList()




How hashmap works?
equals and hashcode

List vs Set

ArrayList Internals

Failfast vs Failsafe collections
failsafe consumes more memory as it creates a copy

ArrayList<String> namesList = new ArrayList<>();
List<String> listofNames = Arrays.asList("pavan","bhavani","kumar","kari");
namesList.addAll(listofNames);
for(String name : namesList ){
System.out.println(name);
namesList.remove(2); // throws java.util.ConcurrentModificationException
}

Iterator<String> nameIterator = namesList.iterator();
while(nameIterator.hasNext()){
	String currName = nameIterator.next();
	if(currName.equals("pavan")){
		nameIterator.remove();
		System.out.println();
	}
}



The asList() method of java.util.Arrays class is used to return a fixed-size list backed by the specified array. 
public static List asList(T... a)


new CopyOnWriteArrayList<>();
then we can add to the list without java.util.ConcurrentModificationException

Singleton design pattern
GOF Singleton vs Spring Singleton

How implement singleton design pattern in java


Factory Design Pattern
